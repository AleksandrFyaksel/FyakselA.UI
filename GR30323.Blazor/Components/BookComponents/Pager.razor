<div class="btn-group" role="group" aria-label="Pager">
    <!-- Кнопка Previous -->
    <button type="button" class="btn btn-outline-primary @(previousEnabled ? "" : "disabled")"
            @onclick="@(e => OnPageSelected(BookService.CurrentPage - 1))">
        <span aria-hidden="true">&laquo;</span>
    </button>

    @for (int i = 1; i <= BookService.TotalPages; i++)
    {
        var temp = i;
        <button type="button" class="btn btn-outline-primary @(IsActive(temp) ? "active" : "")"
                @onclick="@(e => OnPageSelected(temp))">
            @temp
        </button>
    }

    <!-- Кнопка Next -->
    <button type="button" class="btn btn-outline-primary @(nextEnabled ? "" : "disabled")"
            @onclick="@(e => OnPageSelected(BookService.CurrentPage + 1))">
        <span aria-hidden="true">&raquo;</span>
    </button>
</div>

@code {
    [CascadingParameter]
    public IBookService<Book> BookService { get; set; }

    protected override void OnInitialized()
    {
        BookService.ListChanged += StateHasChanged;
    }

    bool previousEnabled => BookService.CurrentPage != 1;
    bool nextEnabled => BookService.CurrentPage != BookService.TotalPages;
    bool IsActive(int pageNo) => pageNo == BookService.CurrentPage;

    async void OnPageSelected(int pageNo)
    {
        await BookService.GetBooks(pageNo);
    }

    public void Dispose()
    {
        BookService.ListChanged -= StateHasChanged;
    }
}